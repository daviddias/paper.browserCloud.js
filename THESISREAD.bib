Automatically generated by Mendeley Desktop 1.12.3
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Preferences -> BibTeX in Mendeley Desktop

@article{Vogt,
author = {Vogt, Christian and Werner, MJ and Schmidt, TC},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Vogt, Werner, Schmidt - 2013 - Leveraging WebRTC for P2P Content Distribution in Web Browsers.pdf:pdf},
isbn = {9781479912704},
journal = {21st IEEE Internanicoal Conference},
title = {{Leveraging WebRTC for P2P Content Distribution in Web Browsers}},
url = {http://inet.cpt.haw-hamburg.de/papers/vws-lwpcd-13.pdf},
year = {2013}
}
@inproceedings{Anderson2015,
author = {Anderson, DP},
booktitle = {Grid Computing, 2004. Proceedings.},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Anderson - 2004 - Boinc A system for public-resource computing and storage.pdf:pdf},
title = {{Boinc: A system for public-resource computing and storage}},
url = {http://ieeexplore.ieee.org/xpls/abs\_all.jsp?arnumber=1382809},
year = {2004}
}
@misc{D.Eastlake3rdMotorola;P.JonesSystems2001,
abstract = {The purpose of this document is to make the SHA-1 (Secure Hash Algorithm 1) hash algorithm conveniently available to the Internet community. The United States of America has adopted the SHA-1 hash algorithm described herein as a Federal Information Processing Standard. Most of the text herein was taken by the authors from FIPS 180-1. Only the C code implementation is "original"},
author = {{D. Eastlake, 3rd Motorola; P. Jones Systems}, Cisco},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/D. Eastlake, 3rd Motorola P. Jones Systems - 2001 - RFC 3174 US Secure Hash Algorithm 1 (SHA1).pdf:pdf},
pages = {1--20},
publisher = {IETF},
title = {{RFC 3174 US Secure Hash Algorithm 1 (SHA1)}},
url = {http://www.ietf.org/rfc/rfc3174.txt},
year = {2001}
}
@article{Ruellan2013,
abstract = {This document describes HPACK, a format adapted to efficiently represent HTTP header fields in the context of HTTP/2.0.},
author = {Ruellan, H and Peon, R.},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Ruellan, Peon - 2013 - HPACK-Header Compression for HTTP2.0.pdf:pdf},
journal = {draft-ietf-httpbis-header-compression-04 (work in progress)},
number = {c},
pages = {1--57},
title = {{HPACK-Header Compression for HTTP/2.0}},
url = {http://scholar.google.com/scholar?hl=en\&btnG=Search\&q=intitle:HPACK+-+Header+Compression+for+HTTP/2.0\#0},
year = {2013}
}
@misc{T.Klingberg2002,
author = {{T. Klingberg}, R. Manfredi},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/T. Klingberg - 2002 - RFC - Gnutella 0.6 Protocol Specification.pdf:pdf},
institution = {Network Working Group},
pages = {1--21},
title = {{RFC - Gnutella 0.6 Protocol Specification}},
url = {http://rfc-gnutella.sourceforge.net/src/rfc-0\_6-draft.html},
year = {2002}
}
@techreport{Zhao2001,
address = {Berkeley,},
author = {Zhao, Ben Y and Kubiatowicz, John and Joseph, Anthony D},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Zhao, Kubiatowicz, Joseph - 2001 - Tapestry An Infrastructure for Fault-tolerant Wide-area Location and Routing.pdf:pdf},
institution = {University of California},
number = {April},
title = {{Tapestry : An Infrastructure for Fault-tolerant Wide-area Location and Routing}},
year = {2001}
}
@article{Definition2003,
abstract = {Gnutella (pronounced "newtella") is a protocol for distributed search. Although the Gnutella protocol supports a traditional client/centralized server search paradigm, Gnutellas distinction is its peer-to-peer, decentralized model. In this model, every client is a server, and vice versa. These so-called Gnutella servents perform tasks normally associated with both clients and servers. They provide client-side interfaces through which users can issue queries and view search results, while at the same time they also accept queries from other servents, check for matches against their local data set, and respond with applicable results. Due to its distributed nature, a network of servents that implements the Gnutella protocol is highly fault-tolerant, as operation of the network will not be interrupted if a subset of servents goes offline.},
author = {Definition, Protocol},
institution = {Stanford University},
journal = {Solutions},
pages = {1--8},
title = {{The Gnutella Protocol Specification v0 . 4}},
url = {http://www.stanford.edu/class/cs244b/gnutella\_protocol\_0.4.pdf},
year = {2003}
}
@article{Anderson2002,
author = {Anderson, By David P and Cobb, Jeff and Korpela, Eric and Lebofsky, Matt},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Anderson et al. - 2002 - SETI@Home, an Experiment in Public-Resource Computing.pdf:pdf},
number = {11},
title = {{SETI@Home, an Experiment in Public-Resource Computing}},
volume = {45},
year = {2002}
}
@article{Ripeanu2002a,
author = {Ripeanu, M.},
doi = {10.1109/P2P.2001.990433},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Ripeanu - 2002 - Peer-to-peer architecture case study Gnutella network.pdf:pdf},
isbn = {0-7695-1503-7},
journal = {Proceedings First International Conference on Peer-to-Peer Computing},
pages = {99--100},
publisher = {IEEE Comput. Soc},
title = {{Peer-to-peer architecture case study: Gnutella network}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=990433},
year = {2002}
}
@misc{IanHickson2013,
author = {{Ian Hickson}},
title = {{WebRTC 1.0: Real-time Communication Between Browsers}},
url = {http://web.archive.org/web/20131209192412/http://www.w3.org/TR/2013/WD-webrtc-20130910/},
year = {2013}
}
@misc{JeffreyDean;SanjayGhemawat,
author = {{Jeffrey Dean; Sanjay Ghemawat}},
title = {{LevelDB}},
url = {https://code.google.com/p/leveldb/}
}
@misc{Mozilla2012,
author = {Mozilla},
title = {{BananaBread}},
url = {https://developer.mozilla.org/en/demos/detail/bananabread},
year = {2012}
}
@article{Golle2001,
author = {Golle, Philippe and Leyton-brown, Kevin and Mironov, Ilya and Lillibridge, Mark},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Golle et al. - 2001 - Incentives for Sharing in Peer-to-Peer Networks.pdf:pdf},
pages = {75--87},
title = {{Incentives for Sharing in Peer-to-Peer Networks}},
year = {2001}
}
@techreport{Milojicic2003,
author = {Milojicic, Dejan S and Kalogeraki, Vana and Lukose, Rajan and Nagaraja, Kiran and Pruyne, Jim and Richard, Bruno and Rollins, Sami and Xu, Zhichen and Pruyne, J I M},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Milojicic et al. - 2003 - Peer-to-Peer Computing.pdf:pdf},
title = {{Peer-to-Peer Computing}},
year = {2003}
}
@article{Armbrust,
author = {Armbrust, Michael and Stoica, Ion and Zaharia, Matei and Fox, Armando and Griffith, Rean and Joseph, Anthony D and Katz, Randy and Konwinski, Andy and Lee, Gunho and Patterson, David and Rabkin, Ariel},
doi = {10.1145/1721654.1721672},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Armbrust et al. - 2010 - A view of cloud computing.pdf:pdf},
issn = {00010782},
journal = {Communications of the ACM},
month = apr,
number = {4},
pages = {50},
title = {{A view of cloud computing}},
url = {http://portal.acm.org/citation.cfm?doid=1721654.1721672},
volume = {53},
year = {2010}
}
@article{Nurmi2009,
author = {Nurmi, Daniel and Wolski, Rich and Grzegorczyk, Chris and Obertelli, Graziano and Soman, Sunil and Youseff, Lamia and Zagorodnov, Dmitrii},
doi = {10.1109/CCGRID.2009.93},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Nurmi et al. - 2009 - The Eucalyptus Open-Source Cloud-Computing System.pdf:pdf},
isbn = {978-1-4244-3935-5},
journal = {2009 9th IEEE/ACM International Symposium on Cluster Computing and the Grid},
pages = {124--131},
publisher = {Ieee},
title = {{The Eucalyptus Open-Source Cloud-Computing System}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5071863},
year = {2009}
}
@incollection{Clarke2001,
abstract = {We describe Freenet, an adaptive peer-to-peer network application that permits the publication, replication, and retrieval of data while protecting the anonymity of both authors and readers. Freenet operates as a network of identical nodes that collectively pool their storage space to store data files and cooperate to route requests to the most likely physical location of data. No broadcast search or centralized location index is employed. Files are referred to in a location-independent manner, and are dynamically replicated in locations near requestors and deleted from locations where there is no interest. It is infeasible to discover the true origin or destination of a file passing through the network, and dificult for a node operator to determine or be held responsible for the actual physical contents of her own node.},
author = {Clarke, Ian and Sandberg, Oskar and Wiley, Brandon and Hong, TW},
booktitle = {Designing Privacy Enhancing \ldots},
editor = {Federrath, Hannes},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Clarke et al. - 2001 - Freenet A distributed anonymous information storage and retrieval system.pdf:pdf},
isbn = {978-3-540-44702-3},
pages = {46--66},
publisher = {Springer Berlin Heidelberg},
title = {{Freenet: A distributed anonymous information storage and retrieval system}},
url = {http://link.springer.com/chapter/10.1007/3-540-44702-4\_4},
year = {2001}
}
@misc{Cohen2009,
abstract = {BitTorrent is a protocol for distributing files. It identifies content by URL and is designed to integrate seamlessly with the web. Its advantage over plain HTTP is that when multiple downloads of the same file happen concurrently, the downloaders upload to each other, making it possible for the file source to support very large numbers of downloaders with only a modest increase in its load.},
author = {Cohen, Bram},
booktitle = {BitTorrent.org},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Cohen - 2009 - The BitTorrent Protocol Specification.pdf:pdf},
keywords = {bittorrent},
title = {{The BitTorrent Protocol Specification}},
url = {http://bittorrent.org/beps/bep\_0003.html},
year = {2009}
}
@article{Silva2011,
author = {Silva, Jo\~{a}o Nuno and Veiga, Lu\'{\i}s and Ferreira, Paulo},
doi = {10.1007/s13174-011-0033-z},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Silva, Veiga, Ferreira - 2011 - A2HA—automatic and adaptive host allocation in utility computing for bag-of-tasks.pdf:pdf},
issn = {1867-4828},
journal = {Journal of Internet Services and Applications},
month = aug,
number = {2},
pages = {171--185},
title = {{A2HA—automatic and adaptive host allocation in utility computing for bag-of-tasks}},
url = {http://www.springerlink.com/index/10.1007/s13174-011-0033-z},
volume = {2},
year = {2011}
}
@article{Korpela2001,
author = {Korpela, E and Werthimer, Dan},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Korpela, Werthimer - 2001 - SETI@Home, Massively Distributed Computing for SETI.pdf:pdf},
journal = {Computing in Science \& Engineering},
pages = {78--83},
title = {{SETI@Home, Massively Distributed Computing for SETI}},
url = {http://ieeexplore.ieee.org/xpls/abs\_all.jsp?arnumber=895191},
year = {2001}
}
@inproceedings{Camargo,
address = {Rio De Janeiro},
annote = {READ+HACKPAD
Aconselhado pelo Veiga

        
"We also intro- duced the concept of virtual ids to deal with load-balancing and node heterogeneity"
Introduzem... quer dizer...

        

        
I can use this paper for the idea of virtual ring for the true allocation, they extended pastry, I will too

        
Pastry seems to be suitable for the ring plans, because of knowing is closest neighboors 

        
"A common technique for data grids is the usage of data replication in conjunction with a replica location sys- tem [3, 4, 14]. Some replica management systems [4, 14] use compression schemes, such as Bloom filters, allowing replicamanagers to have complete knowledge about replica locations on the grid. The search mechanism is fast and the system has a high degree of fault-tolerance. But due to the global knowledge of replica locations, these systems have limited scalability. Also, the serversmaintaining the replica locations are usually configured statically."

        
"We designed OppStore as a middleware that enables thereliable and efficient storage of read-only data using the free storage space fromidlemachines in opportunistic grids"
This is only for READ ONLY DATA

        

        
It has an interesting clustering federation architecture, which looks like bittorrent, but calling it federation makes it look even cooler

        

      },
author = {Camargo, Raphael Y De and Kon, Fabio and Science, Computer and Paulo, Universidade De S\~{a}o},
booktitle = {Seventh IEEE International Symposium on Cluster Computing and the Grid, 2007. CCGRID 2007.},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Camargo et al. - 2007 - Design and Implementation of a Middleware for Data Storage in Opportunistic Grids.pdf:pdf},
pages = {23--30},
publisher = {IEEE},
title = {{Design and Implementation of a Middleware for Data Storage in Opportunistic Grids}},
year = {2007}
}
@article{Maymounkov,
annote = {READ},
author = {Maymounkov, Petar and Mazi\`{e}res, David},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Maymounkov, Mazi\`{e}res - Unknown - Kademlia A Peer-to-peer Information System Based on the XOR Metric.pdf:pdf},
title = {{Kademlia: A Peer-to-peer Information System Based on the XOR Metric}}
}
@article{Karger2004,
address = {New York, New York, USA},
author = {Karger, David R. and Ruhl, Matthias},
doi = {10.1145/1007912.1007919},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Karger, Ruhl - 2004 - Simple efficient load balancing algorithms for peer-to-peer systems.pdf:pdf},
isbn = {1581138407},
journal = {Proceedings of the sixteenth annual ACM symposium on Parallelism in algorithms and architectures - SPAA '04},
pages = {36},
publisher = {ACM Press},
title = {{Simple efficient load balancing algorithms for peer-to-peer systems}},
url = {http://portal.acm.org/citation.cfm?doid=1007912.1007919},
year = {2004}
}
@article{Marti,
abstract = {The field of peer-to-peer reputation systems has exploded in the last few years. Our goal is to organize existing ideas and work to facilitate system design. We present a taxonomy of reputation system components, their properties, and discuss how user behavior and technical constraints can conflict. In our discussion, we describe research that exemplifies compromises made to deliver a useable, implementable system.},
author = {Marti, Sergio and Garcia-molina, Hector},
edition = {Volume 50,},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Marti, Garcia-molina - 2006 - Taxonomy of Trust Categorizing P2P Reputation Systems.pdf:pdf},
journal = {Computer Networks},
keywords = {peer-to-peer,reputation,security,trust},
month = mar,
number = {April 2005},
pages = {472--484},
title = {{Taxonomy of Trust : Categorizing P2P Reputation Systems}},
url = {http://www.sciencedirect.com/science/article/pii/S138912860500215X},
year = {2006}
}
@inproceedings{Eymann2003,
abstract = {Application-layer networks (ALN) are software architectures that allow the provisioning of services requiring a huge amount of resources by connecting large numbers of individual computers, e.g. grids and P2P-networks. Self-organization, like proposed by the autonomic computing concept, might be the key to controlling these systems. The CATNET project evaluates a decentralized mechanism for resource allocation in ALN, based on the economic paradigm of the Catallaxy. The economic model is based on self-interested maximization of utility and self-interested cooperation between software agents, who buy and sell network services and resources to and from each other.},
annote = {READ+HACKPAD
The Autonomic Computing paradigm is based on abiological notion of self-organization [11]. However,

        
Again, it tries to treat CPU and Storage as goods and make an economic model around it

        
"The term Catallaxy derives from the Greek word katallatein, which means "barter” and at the same time "to join a community”"},
author = {Eymann, T and Reinickke, M. and Ardaiz, O and Artigas, P and Freitag, F and Navarro, L.},
booktitle = {14th International Workshop on Database and Expert Systems Applications, 2003. Proceedings.},
doi = {10.1109/DEXA.2003.1232096},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Eymann et al. - 2003 - Self-organizing resource allocation for autonomic network.pdf:pdf},
isbn = {0-7695-1993-8},
pages = {656--660},
publisher = {IEEE Comput. Soc},
title = {{Self-organizing resource allocation for autonomic network}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1232096},
year = {2003}
}
@article{Preneel1999,
author = {Preneel, Bart},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Preneel - 1999 - The State of Cryptographic Hash Functions.pdf:pdf},
pages = {158--182},
title = {{The State of Cryptographic Hash Functions}},
year = {1999}
}
@inproceedings{Handley,
author = {Handley, Mark and Karp, Richard},
booktitle = {SIGCOMM '01 Proceedings of the 2001 conference on Applications, technologies, architectures, and protocols for computer communications},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Handley, Karp - 2001 - A Scalable Content-Addressable Network.pdf:pdf},
isbn = {1581134118},
number = {4},
pages = {161--172},
title = {{A Scalable Content-Addressable Network}},
volume = {21},
year = {2001}
}
@inproceedings{Silva2008,
author = {Silva, Jo\~{a}o Nuno and Veiga, Lu\'{\i}s and Ferreira, Paulo},
booktitle = {2008 Second IEEE International Conference on Self-Adaptive and Self-Organizing Systems Workshops},
doi = {10.1109/SASOW.2008.66},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Silva, Veiga, Ferreira - 2008 - nuBOINC BOINC Extensions for Community Cycle Sharing.pdf:pdf},
month = oct,
pages = {248--253},
publisher = {IEEE},
title = {{nuBOINC: BOINC Extensions for Community Cycle Sharing}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4800686},
year = {2008}
}
@article{Decandia2007,
author = {Decandia, Giuseppe and Hastorun, Deniz and Jampani, Madan and Kakulapati, Gunavardhan and Lakshman, Avinash and Pilchin, Alex and Sivasubramanian, Swaminathan and Vosshall, Peter and Vogels, Werner},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Decandia et al. - 2007 - Dynamo Amazon’s Highly Available Key-value Store.pdf:pdf},
isbn = {9781595935915},
pages = {205--220},
title = {{Dynamo : Amazon’s Highly Available Key-value Store}},
year = {2007}
}
@article{Tilkov2010,
author = {Tilkov, Stefan and Verivue, Steve Vinoski},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Tilkov, Verivue - 2010 - Node.js Using JavaScript to Build High-Performance Network Programs.pdf:pdf},
title = {{Node.js : Using JavaScript to Build High-Performance Network Programs}},
year = {2010}
}
@article{Merelo2007,
annote = {READ+HACKPAD
Introduce cycle sharing in the browser
Uses AJAX and XML

        
Uses Ruby on Rails (bah)

        
          
Acronymns
        
Application-level networks (ALN)

        

        
SETI was a ALN

        
Talks about the State of the Art in Volunteer computing

        
Meter com fartura refer\^{e}ncias ao ECMA

      },
author = {Merelo, Juan-j and Mora-garc\'{\i}a, Antonio and Lupi\'{o}n, Juan and Tricas, Fernando},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Merelo et al. - 2007 - Browser-based Distributed Evolutionary Computation Performance and Scaling Behavior Categories and Subject Descr.pdf:pdf},
isbn = {9781595936981},
keywords = {application level networks,distributed computing,implementations,internet computing,overlay networks,parallel computing,ruby on rails,world-wide-web},
pages = {2851--2858},
title = {{Browser-based Distributed Evolutionary Computation : Performance and Scaling Behavior Categories and Subject Descriptors}},
year = {2007}
}
@article{Rowstron2001a,
address = {New York, New York, USA},
author = {Rowstron, Antony and Druschel, Peter},
doi = {10.1145/502051.502053},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Rowstron, Druschel - 2001 - Storage management and caching in PAST, a large-scale, persistent peer-to-peer storage utility.pdf:pdf;:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Druschel, Rowstron - 2001 - PAST A large-scale , persistent peer-to-peer storage utility.pdf:pdf},
isbn = {076951040X},
journal = {Proceedings of the eighteenth ACM symposium on Operating systems principles - SOSP '01},
pages = {75--80},
publisher = {ACM Press},
title = {{PAST A large-scale , persistent peer-to-peer storage utility}},
url = {http://portal.acm.org/citation.cfm?doid=502034.502053},
year = {2001}
}
@article{Koloniari2005,
author = {Koloniari, Georgia and Pitoura, Evaggelia},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Koloniari, Pitoura - 2005 - Peer-to-Peer Management of XML Data Issues and Research Challenges.pdf:pdf},
number = {2},
pages = {6--17},
title = {{Peer-to-Peer Management of XML Data : Issues and Research Challenges}},
volume = {34},
year = {2005}
}
@article{Camargo2006,
annote = {READ+HACKPAD
Veiga's choice

        
evaluates several strategies for storing checkpoint data in an opportunistic grid environment

        
It's a P2P with a CDRM (Cluster data repository manager), and creates clusters, this is because there is  notion of localization of computing power known before hand... with doesn't happen in "human's cloud"

        

      },
author = {Camargo, Raphael Y De and Kon, Fabio and Paulo, S\~{a}o},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Camargo, Kon, Paulo - 2006 - Strategies for Checkpoint Storage on Opportunistic Grids.pdf:pdf},
number = {9},
pages = {1--11},
title = {{Strategies for Checkpoint Storage on Opportunistic Grids}},
volume = {7},
year = {2006}
}
@article{Bharambe,
author = {Bharambe, Ashwin R and Agrawal, Mukesh and Seshan, Srinivasan},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Bharambe, Agrawal, Seshan - Unknown - Mercury Supporting Scalable Multi-Attribute Range Queries.pdf:pdf},
isbn = {1581138628},
keywords = {bles,distributed hash ta-,load balancing,peer-to-peer systems,random sampling,range queries},
pages = {353--366},
title = {{Mercury : Supporting Scalable Multi-Attribute Range Queries}}
}
@misc{Ecma2009,
author = {Ecma, S},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Ecma - 2009 - ECMA-262 ECMAScript Language Specification.pdf:pdf},
number = {June},
title = {{ECMA-262 ECMAScript Language Specification}},
url = {http://scholar.google.com/scholar?hl=en\&btnG=Search\&q=intitle:ECMA-262+ECMAScript+Language+Specification\#0},
year = {2009}
}
@unpublished{Thomson2013,
abstract = {This specification describes an optimized expression of the syntax of the Hypertext Transfer Protocol (HTTP). HTTP/2.0 enables a more efficient use of network resources and a reduced perception of latency by introducing header field compression and allowing multiple concurrent messages on the same connection. It also introduces unsolicited push of representations from servers to clients. This document is an alternative to, but does not obsolete, the HTTP/1.1 message syntax. HTTP’s existing semantics remain unchanged. This version of the draft has been marked for implementation. Interoperability testing will occur in the HTTP/2.0 interim in Zurich, CH, starting 2014-01-22. This replaces -08, which was originally identified as an implementation draft.},
author = {Thomson, M and Melnikov, A},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Thomson, Melnikov - 2013 - Hypertext Transfer Protocol version 2.0 draft-ietf-httpbis-http2-09.pdf:pdf},
pages = {1--64},
title = {{Hypertext Transfer Protocol version 2.0 draft-ietf-httpbis-http2-09}},
year = {2013}
}
@article{Desmedt;1998,
author = {Desmedt, Y and Frankel, Y},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Desmedt, Frankel - 1990 - Threshold cryptosystems.pdf:pdf},
journal = {Advances in Cryptology—CRYPTO'89 \ldots},
title = {{Threshold cryptosystems}},
url = {http://link.springer.com/chapter/10.1007/0-387-34805-0\_28},
year = {1990}
}
@article{Dabek2004a,
annote = {READ+HACKPAD
Vivaldi is a simple, light-weight algorithm that as- signs synthetic coordinates to hosts such that the distance between the coordinates of two hosts accurately predicts the communication latency between the hosts.

        
This can be interesting for the Load Balance in terms of optimization for the computation and the data

        
Coordinates gives you help to know where to fetch},
author = {Dabek, Frank and Cox, Russ and Kaashoek, Frans and Morris, Robert},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Dabek et al. - 2004 - Vivaldi A Decentralized Network Coordinate System.pdf:pdf},
isbn = {1581138628},
keywords = {internet topology,network coordinates,vivaldi},
title = {{Vivaldi : A Decentralized Network Coordinate System}},
year = {2004}
}
@phdthesis{Afify,
abstract = {It is no doubt that online social networks are currently the hottest trend in the web. During the last two years many web applications emerged to provide with their own system. However, a lack of innovation and a erce concurrence have slowed the trend, and many services were left without other choice than to close down. Much like what happened with the business of Search Engines and the Google's merciless dominance, Facebook and Myspace are growing very fast. The centralized access and data control is a serious privacy problem, and a solution is to provide with a pure peer-to-peer infrastructure so that users get the control over their data. Many research questions on how to implement a functional Peer-to-peer Social Network (P2PSN) are raised in the elds of storage and security. In this thesis we concentrate on access control as it is one of the most challenging feature of centralized servers to distribute among an untrusted network of peers.},
annote = {READ+HACKPAD
It starts on second page

        
This thesis is all about creating a Social Network with privacy on a P2P network

        
Gives some lamme descriptions of Social Networks

        
Threshold Cruptography introduced by Desmedt and Frankel (many people that sign) (Ver paper 1 ,3 e 10!!!)

        
          
Acronyms
        
Distributed Object Location and Retrivel (DOLR)

        
* Freenet is a virtual file system focused on security, perfomance and availability, but more target for archive type of storage (without updates)

        
* Plutus Uses lazy revokation introduced by Cepheus, objects are stored encrypted and to change the permissions, you can decrypt and encrypt with another key

        

        
It has nice ideas for a paper to write a social network on top of the P2P thing},
author = {Afify, Youssef},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Afify - 2008 - Access Control in a Peer-to-peer Social Network.pdf:pdf},
pages = {30},
school = {ECOLE POLYTECHNIQUE FEDERALE DE LAUSANNE},
title = {{Access Control in a Peer-to-peer Social Network}},
year = {2008}
}
@article{Filipe2011,
annote = {READ+HACKPAD
Paper/Tese aconselhado pelo Veiga
Focus: peer-to-peer cycle-sharing environment based on an economic model

        

        
Good Quote:
The BOINC system, with projects like SETI@home and Folding@home [3; 33], takes advantage of those resources by using them to perform the CPU-intensive calculations necessary for scientific investigation. However, these systems traditionally follow a rigid client-server model, with a centralized server that is the only one that can create the jobs that are executed. This means that the home users cannot take advantage of the resources of the system for which they contribute to.

        

        
"Bit torrent [4], the most popular peer-to-peer content distribution system (represented 35\% of Internet’s traffic in 2005)"

        
They use an economic model to give an uniform treatment to resources, it's nice, but not my thing though

        
Now they have a Reputation mechanism, that's more like it!

        
Idea for reputation, save history of machine, but keep the reputation score in recent history

        
Check what is paper:
[5]
[39]
[4] -> Bit Torrent -> File sharing
[37]
[43] -> Reputation mechanism
[15] -> Ebay reputation mechanism
[40] -> KARMA- Repuation stored by neighboors 
[22] -> EigenTrust Algorithm - Reputation store locally

        

        
Economic models for resource management
[8];[9];[18]

        

      },
author = {Filipe, Pedro and Oliveira, Goldschmidt},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Filipe, Oliveira - 2011 - Gridlet Economics Resource Management Models and Policies for Cycle-Sharing Systems.pdf:pdf},
title = {{Gridlet Economics : Resource Management Models and Policies for Cycle-Sharing Systems}},
year = {2011}
}
@incollection{Byers,
abstract = {Distributed hash tables have recently become a useful building block for a variety of distributed applications. However, current schemes based upon consistent hashing require both considerable implementation complexity and substantial storage overhead to achieve desired load balancing goals. We argue in this paper that these goals can be achieved more simply and more cost-effectively. First, we suggest the direct application of the “power of two choices” paradigm, whereby an item is stored at the less loaded of two (or more) random alternatives. We then consider how associating a small constant number of hash values with a key can naturally be extended to support other load balancing strategies, including load-stealing or load-shedding, as well as providing natural fault-tolerance mechanisms.},
author = {Byers, John and Considine, Jeffrey and Mitzenmacher, Michael},
booktitle = {Peer-to-Peer Systems II},
doi = {10.1007/978-3-540-45172-3\_7},
editor = {{M. Frans Kaashoek ; Ion Stoica}},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Byers, Considine, Mitzenmacher - 2003 - Simple Load Balancing for Distributed Hash Tables.pdf:pdf},
pages = {80--88},
publisher = {Springer Berlin Heidelberg},
title = {{Simple Load Balancing for Distributed Hash Tables}},
year = {2003}
}
@incollection{Wallach,
abstract = {Peer-to-peer (p2p) networking technologies have gained popularity as a mechanism for users to share files without the need for centralized servers.A p2p network provides a scalable and fault-tolerant mechanism to locate nodes anywhere on a network without maintaining a large amount of routing state. This allows for a variety of applications beyond simple file sharing. Examples include multicast systems, anonymous communications systems, and web caches. We survey security issues that occur in the underlying p2p routing protocols, as well as fairness and trust issues that occur in file sharing and other p2p applications.We discuss how techniques, ranging from cryptography, to random network probing, to economic incentives, can be used to address these problems.},
author = {Wallach, Dan S},
booktitle = {Software Security — Theories and Systems},
doi = {10.1007/3-540-36532-X\_4},
editor = {Mitsu@abelard.flet.keio.ac.jp, Mitsuhiro Okada},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Wallach - 2003 - A Survey of Peer-to-Peer Security Issues.pdf:pdf},
isbn = {978-3-540-36532-7},
pages = {42--57},
title = {{A Survey of Peer-to-Peer Security Issues}},
year = {2003}
}
@article{Ranjan2006,
abstract = {Efcient Resource discovery mechanism is one of the fundamental requirement for Grid computing systems, as it aids in resource management and scheduling of applications. Resource discovery activity involve searching for the appropriate resource types that match the user's application requirements. Various kinds of solutions to grid resource discovery have been suggested, including the centralised and hierarchical information server approach. However, both of these approaches have serious limitations in regards to scalability, fault-tolerance and network congestion. To overcome these limitations, indexing resource information using a decentralised (such as Peer-to-Peer (P2P)) network model has been actively proposed in the past few years. This article investigates various decentralised resource discovery techniques primarily driven by P2P network model. To summarise, this article presents a: (i) summary of current state of art in grid resource discovery; (ii) resource taxonomy with focus on computational grid paradigm; (iii) P2P taxonomy with focus on extending the current structured systems (such as Distributed Hash Tables) for indexing d-dimensional grid resource queries; (iv) detailed survey of existing works that can support d-dimensional grid resource queries; and (v) classication of the surveyed approaches based on the proposed P2P taxonomy. We believe that this taxonomy and its mapping to relevant systems would be useful for academic and industry based researchers who are engaged in the design of scalable Grid and P2P systems.},
annote = {READ+HACKPAD
THIS PAPER ROCKS!

        
* Computational Grids - TeraGrid, ChinaGrid and APACGrid
* Data Grids - LHCGrid GriPhyN
* Interaction Grids (focus on collaborative visualization) - AccessGrid
* Knowledge Grids (knowledge acquisition)
* Utility Grids (provide all grids services)

        
This paper focus in computational grids },
author = {Ranjan, Rajiv and Harwood, Aaron and Buyya, Rajkumar},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Ranjan, Harwood, Buyya - 2006 - A study on peer-to-peer based discovery of grid resource information.pdf:pdf},
journal = {Australia, Technical Report GRIDS},
pages = {1--36},
title = {{A study on peer-to-peer based discovery of grid resource information}},
url = {http://pdf.aminer.org/000/223/617/a\_resource\_organizing\_protocol\_for\_grid\_based\_on\_bounded\_two.pdf},
year = {2006}
}
@article{Vishnumurthy,
author = {Vishnumurthy, Vivek and Chandrakumar, Sangeeth and Emin, G},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Vishnumurthy, Chandrakumar, Emin - 2003 - Karma A secure economic framework for peer-to-peer resource sharing.pdf:pdf},
title = {{Karma: A secure economic framework for peer-to-peer resource sharing}},
year = {2003}
}
@inproceedings{Zakai2011,
abstract = {We present Emscripten, a compiler from LLVM (Low Level Virtual Machine) assembly to JavaScript. This opens up two avenues for running code written in languages other than JavaScript on the web: (1) Compile code directly into LLVMassembly, and then compile that into JavaScript using Emscripten, or (2) Compile a language’s entire runtime into LLVMand then JavaScript, as in the previous approach, and then use the compiled runtime to run code written in that language. For example, the former approach can work for C and C++, while the latter can work for Python; all three examples open up new opportunities for running code on the web. Emscripten itself is written in JavaScript and is avail- able under the MIT license (a permissive open source li- cense), at http://www.emscripten.org. As a compiler from LLVM to JavaScript, the challenges in designing Em- scripten are somewhat the reverse of the norm – one must go from a low-level assembly into a high-level language, and recreate parts of the original high-level structure of the code that were lost in the compilation to low-level LLVM. We detail the methods used in Emscripten to deal with those challenges, and in particular present and prove the validity of Emscripten’s Relooper algorithm, which recreates high- level loop structures from low-level branching data},
author = {Zakai, Alon},
booktitle = {Proceedings of the ACM international conference companion on Object oriented programming systems languages and applications companion},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Zakai - 2011 - Emscripten an llvm-to-javascript compiler.pdf:pdf},
publisher = {ACM},
title = {{Emscripten: an llvm-to-javascript compiler}},
url = {http://dl.acm.org/citation.cfm?id=2048224},
year = {2011}
}
@incollection{Douceura,
abstract = {Large-scale peer-to-peer systems face security threats from faulty or hostile remote computing elements. To resist these threats, many such systems employ redundancy. However, if a single faulty entity can present multiple identities, it can control a substantial fraction of the system, thereby undermining this redundancy. One approach to preventing these “Sybil attacks” is to have a trusted agency certify identities. This paper shows that, without a logically centralized authority, Sybil attacks are always possible except under extreme and unrealistic assumptions of resource parity and coordination among entities.},
author = {Douceur, John R},
booktitle = {Peer-to-Peer Systems},
doi = {10.1007/3-540-45748-8\_24},
editor = {Druschel@cs.rice.edu, Peter Drusch and Antr@microsoft.com, Antony Rowstron},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Douceur - 2002 - The Sybil Attack.pdf:pdf},
isbn = {978-3-540-45748-0},
pages = {251--260},
publisher = {Springer Berlin Heidelberg},
title = {{The Sybil Attack}},
year = {2002}
}
@misc{Mozilla2013,
author = {Mozilla},
title = {{Epic Citadel - Unreal Engine 3 ported to Javascript}},
year = {2013}
}
@article{Rodrigues,
author = {Rodrigues, Rodrigo and Ferreira, Paulo},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Rodrigues, Ferreira - Unknown - GiGi An Ocean of Gridlets on a “ Grid-for-the-Masses ”.pdf:pdf},
title = {{GiGi : An Ocean of Gridlets on a “ Grid-for-the-Masses ”}}
}
@article{Barraca2011,
annote = {READ+HACKPAD
Blabla bla cloud is cheap, lack of control of data blabla bla

        
"User Centric Clouds" term appears in chapter 5

        
"A cloud system that uses user-centric technology can put the user back in the driver seatof his data,"

        
It focus on users giving to the community the same services as the cloud providers do in a "common API"

        
This is not a pure P2P thing},
author = {Barraca, Jo\~{a}o Paulo and Matos, Alfredo and Aguiar, Rui L.},
doi = {10.1007/s11277-011-0287-6},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Barraca, Matos, Aguiar - 2011 - User Centric Community Clouds.pdf:pdf},
issn = {0929-6212},
journal = {Wireless Personal Communications},
keywords = {cloud infrastructure,identity management,user-centric systems},
month = apr,
number = {1},
pages = {31--48},
title = {{User Centric Community Clouds}},
url = {http://link.springer.com/10.1007/s11277-011-0287-6},
volume = {58},
year = {2011}
}
@article{Rieche,
author = {Rieche, S. and Petrak, L. and Wehrle, K.},
doi = {10.1109/LCN.2004.10},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Rieche, Petrak, Wehrle - Unknown - A thermal-dissipation-based approach for balancing data load in distributed hash tables.pdf:pdf},
isbn = {0-7695-2260-2},
journal = {29th Annual IEEE International Conference on Local Computer Networks},
pages = {15--23},
publisher = {IEEE (Comput. Soc.)},
title = {{A thermal-dissipation-based approach for balancing data load in distributed hash tables}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1367197}
}
@article{Rao2003,
author = {Rao, Ananth and Lakshminarayanan, Karthik and Surana, Sonesh and Karp, Richard},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Rao et al. - 2003 - Load Balancing in Structured P2P Systems.pdf:pdf},
pages = {68--79},
title = {{Load Balancing in Structured P2P Systems}},
volume = {0225660},
year = {2003}
}
@article{Bakhtiari,
author = {Bakhtiari, S and Pieprzyk, J},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Bakhtiari, Pieprzyk - 1995 - Cryptographic hash functions A survey. Centre for Computer Security Research, Department of Computer Scienc.pdf:pdf},
pages = {1--26},
title = {{Cryptographic hash functions: A survey." Centre for Computer Security Research, Department of Computer Science}},
year = {1995}
}
@inproceedings{Kempea,
abstract = {Over the last decade, we have seen a revolution in con- nectivity between computers, and a resulting paradigm shift from centralized to highly distributed systems. With massive scale also comes massive instability, as node and link fail- ures become the norm rather than the exception. For such highly volatile systems, decentralized gossip-based proto- cols are emerging as an approach to maintaining simplicity and scalability while achieving fault-tolerant information dissemination. In this paper, we study the problem of computing aggre- gates with gossip-style protocols. Our first contribution is an analysis of simple gossip-based protocols for the compu- tations of sums, averages, random samples, quantiles, and other aggregate functions, and we show that our protocols converge exponentially fast to the true answer when using uniform gossip. Our second contribution is the definition of a precise no- tion of the speed with which a node’s data diffuses through the network. We show that this diffusion speed is at the heart of the approximation guarantees for all of the above problems. We analyze the diffusion speed of uniform gos- sip in the presence of node and link failures, as well as for flooding-based mechanisms. The latter expose interesting connections to random walks on graphs. 1.},
author = {Kempe, D. and Dobra, A. and Gehrke, J.},
booktitle = {44th Annual IEEE Symposium on Foundations of Computer Science, 2003. Proceedings.},
doi = {10.1109/SFCS.2003.1238221},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Kempe, Dobra, Gehrke - Unknown - Gossip-based computation of aggregate information.pdf:pdf},
isbn = {0-7695-2040-5},
pages = {482--491},
publisher = {IEEE Computer. Soc},
title = {{Gossip-based computation of aggregate information}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1238221}
}
@article{Stoica2001,
annote = {
        From Duplicate 1 ( 
        

        

        

        

        

        
          

          

          

        
        

        
          

        
        
          Chord : A Scalable Peer-to-peer Lookup Service for Internet Applications
        
        
          

        
        

        
          

          

          

        
        

        

        

        

        

         - Stoica, Ion; Morris, Robert; Karger, David; Kaashoek, M Frans; Balakrishnan, Hari )

          

          

          

        
        

        

        

        
READ

        

        

        

        

        

        

        

      },
author = {Stoica, Ion and Morris, Robert and Karger, David and Kaashoek, M Frans and \'{Y}, Hari Balakrishnan and Balakrishnan, Hari},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Stoica et al. - 2001 - Chord A Scalable Peer-to-peer Lookup Service for Internet.pdf:pdf},
isbn = {1581134118},
pages = {149--160},
title = {{Chord : A Scalable Peer-to-peer Lookup Service for Internet}},
year = {2001}
}
@article{Barabasi2001,
abstract = {Reliable communication on the Internet is guaranteed by a standard set of protocols, used by all computers. Here we show that these protocols can be exploited to compute with the communication infrastructure, transforming the Internet into a distributed computer in which servers unwittingly perform computation on behalf of a remote node. In this model, which we call 'parasitic computing', one machine forces target computers to solve a piece of a complex computational problem merely by engaging them in standard communication. Consequently, the target computers are unaware that they have performed computation for the benefit of a commanding node. As experimental evidence of the principle of parasitic computing, we harness the power of several web servers across the globe, which-unknown to them-work together to solve an NP complete problem.},
author = {Barab\'{a}si, a L and Freeh, V W and Jeong, H and Brockman, J B},
doi = {10.1038/35091039},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Barab\'{a}si et al. - 2001 - Parasitic computing.pdf:pdf},
issn = {0028-0836},
journal = {Nature},
month = aug,
number = {6850},
pages = {894--7},
pmid = {11528474},
title = {{Parasitic computing.}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/11528474},
volume = {412},
year = {2001}
}
@article{Braem2013a,
annote = {The goal of Community-Lab is to advance research and empower society by understanding and removing obsta- cles for these networks and services

        
“Community networking”, also known as “bottom-up networking”, is an emerging model for the Future Internet, where communities of citizens build, operate and own open IP-based networks

        
In Southern Europe, Guifi.net [2] in Spain is a very large network consisting of more than 20,000 nodes andmore than 24,000 links. For

        
COMMUNITY-LAB To allow more research with community networks, theCommunity-Lab [15] testbed is being developed and oper- ated by the European FP7 CONFINE project (Commu- nity Networks Testbed for the Future Internet, FP7 In- tegrated Project 2011-2015) [16], federating existing com- munity networks. The goal of the testbed is supporting experimentally-driven research on community-owned open local IP networks. To achieve this goal, the CONFINE testbed integrates with and extends three existing commu- nity},
author = {Braem, Bart and {Baig Vi\~{n}as}, Roger and Kaplan, Aaron L. and Neumann, Axel and {Vilata i Balaguer}, Ivan and Tatum, Blaine and Matson, Malcolm and Blondia, Chris and Barz, Christoph and Rogge, Henning and Freitag, Felix and Navarro, Leandro and Bonicioli, Joseph and Papathanasiou, Stavros and Escrich, Pau},
doi = {10.1145/2500098.2500108},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Braem et al. - 2013 - A case for research with and on community networks(2).pdf:pdf},
issn = {01464833},
journal = {ACM SIGCOMM Computer Communication Review},
keywords = {community networks,community-lab,testbed},
month = jul,
number = {3},
pages = {68},
title = {{A case for research with and on community networks}},
url = {http://dl.acm.org/citation.cfm?doid=2500098.2500108},
volume = {43},
year = {2013}
}
@techreport{Navarro,
author = {Navarro, Leandro},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Navarro - Unknown - Experimental research on community networks.pdf:pdf},
title = {{Experimental research on community networks}}
}
@article{Lazaro2012,
annote = {READ+HACKPAD
Aconcelhado pelo Veiga

        
"we focus on the problem of predicting if a group of resources will be continuously available for a relatively long time period"

        
great quote:

        
"Currently, volunteer systems provide about 10 PetaFLOPS of computing power for scientific projects. Using volun- teers, these projects have produced breakthrough scientific results [26] published in over 60 of the world’s most prestigious confer- ences and journals, such as Science and Nature."

        
"However, the volatility of Internet volunteer resources has lim-ited the range of applications to those that are high-throughput and embarrassingly parallel. Other applications, such as communi- cating parallel jobs or web services, could potentially benefit from this cost-effective platform, if the volatility of these resources could be masked or managed"

        
The service is considered available when there are at least N hosts offering it. This notion is called collective availability [3].

        

        
Este paper \'{e} muito interessante, um future work sem d\'{u}vida!

        

        
Com isto lembrei-me que future work \'{e} ter elections para existir o commandante geral que faz todo este tipo de opera\c{c}\~{o}es na rede para aumentar a eficiencia},
author = {L\'{a}zaro, Daniel and Kondo, Derrick and Marqu\`{e}s, Joan Manuel},
doi = {10.1016/j.jpdc.2011.10.007},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/L\'{a}zaro, Kondo, Marqu\`{e}s - 2012 - Long-term availability prediction for groups of volunteer resources.pdf:pdf},
issn = {07437315},
journal = {Journal of Parallel and Distributed Computing},
keywords = {availability prediction},
month = feb,
number = {2},
pages = {281--296},
title = {{Long-term availability prediction for groups of volunteer resources}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S0743731511002061},
volume = {72},
year = {2012}
}
@incollection{Rowstron2001,
abstract = {This paper presents the design and evaluation of Pastry, a scalable, distributed object location and routing substrate for wide-area peer-to-peer applications. Pastry performs application-level routing and object location in a potentially very large overlay network of nodes connected via the Internet. It can be used to support a variety of peer-to-peer applications, including global data storage, data sharing, group communication and naming. Each node in the Pastry network has a unique identifier (nodeId). When presented with a message and a key, a Pastry node efficiently routes the message to the node with a nodeId that is numerically closest to the key, among all currently live Pastry nodes. Each Pastry node keeps track of its immediate neighbors in the nodeId space, and notifies applications of new node arrivals, node failures and recoveries. Pastry takes into account network locality; it seeks to minimize the distance messages travel, according to a to scalar proximity metric like the number of IP routing hops Pastry is completely decentralized, scalable, and self-organizing; it automatically adapts to the arrival, departure and failure of nodes. Experimental results obtained with a prototype implementation on an emulated network of up to 100,000 nodes confirm Pastry’s scalability and efficiency, its ability to self-organize and adapt to node failures, and its good network locality properties},
author = {Rowstron, Antony and Druschel, Peter},
booktitle = {Middleware 2001},
doi = {10.1007/3-540-45518-3\_18},
editor = {{Rachid Guerraoui}},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Rowstron, Druschel - 2001 - Pastry Scalable , Decentralized Object Location , and Routing for Large-Scale Peer-to-Peer Systems.pdf:pdf},
isbn = {978-3-540-45518-9},
pages = {329--350},
publisher = {Springer Berlin Heidelberg},
title = {{Pastry : Scalable , Decentralized Object Location , and Routing for Large-Scale Peer-to-Peer Systems}},
url = {http://link.springer.com/chapter/10.1007/3-540-45518-3\_18},
year = {2001}
}
@inproceedings{Kargerl,
author = {Karger, David and Leightonl, Tom and Lewinl, Daniel and Lehman, Eric and Panigrahy, Rina},
booktitle = {STOC '97 Proceedings of the twenty-ninth annual ACM symposium on Theory of computing},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Karger et al. - 1997 - Consistent Hashing and Random Trees Distributed Caching Protocols for Relieving Hot Spots on the World Wide Web.pdf:pdf},
pages = {654--663},
title = {{Consistent Hashing and Random Trees : Distributed Caching Protocols for Relieving Hot Spots on the World Wide Web *}},
year = {1997}
}
@misc{Recommendation2013,
author = {W3C},
title = {{Indexed Database}},
url = {http://web.archive.org/web/20131209192703/http://www.w3.org/TR/IndexedDB/},
year = {2013}
}
@misc{ServiceWorkers,
author = {W3C},
title = {{Service Workers}},
url = {http://www.w3.org/TR/2014/WD-service-workers-20141118/},
year = {2014}
}
@misc{Shirky.,
author = {Shirky., C.},
title = {{Clay shirky’s writings about the internet. In http://www.shirky.com/}},
url = {http://www.shirky.com/}
}
@article{Costa2012,
author = {Costa, F and Silva, JN and Veiga, L and Ferreira, Paulo},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Costa et al. - 2012 - Large-scale volunteer computing over the Internet.pdf:pdf},
journal = {Internet Services and Applications},
keywords = {adaptive middleware,distributed sys-,mapreduce,tems,volunteer computing},
pages = {1--18},
title = {{Large-scale volunteer computing over the Internet}},
url = {http://link.springer.com/article/10.1007/s13174-012-0072-0},
year = {2012}
}
@article{Google/Mozzila/Opera,
abstract = {Looks at how developers are going back to the future by building Web applications using Ajax (Asynchronous JavaScript and XML), a set of technologies mostly developed in the 1990s. A key advantage of Ajax applications is that they look and act more like desktop applications. Proponents argue that Ajax applications perform better than traditional Web programs. As an example, Ajax applications can add or retrieve new data for a page it is working with and the page will update immediately without reloading.},
author = {Paulson, L.D.},
doi = {10.1109/MC.2005.330},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Paulson - 2005 - Building rich web applications with Ajax.pdf:pdf},
issn = {0018-9162},
journal = {Computer},
month = oct,
number = {10},
pages = {14--17},
title = {{Building rich web applications with Ajax}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=1516047},
volume = {38},
year = {2005}
}
@article{Duda2013,
annote = {READ+HACKPAD
THIS PAPER IS ABOUT THE FIRST ATTEMPT ON BRINGING JS AND JSON FOR BROWSER DISTRIBUTED COMPUTING

        
VNS - Variable Neighbook Search

        
          
Algorithms based on laws of nature

        Evolutionary Algorithm - EA
Simulated annealing - SA
Colony optimization - ACO
Particle swarmn optimization - PSO
Artificial Bee Colonies - ABC

        
You can divide the algoritms into two sets:
- Single Solution in each iteration
- Set of solutions, often refered as population

        
You can decrease the computation time with metaheuristics

        
          
Models for distributed computation

        - Global parallelization model - One population sharded in small sets computed by several slaves

        
          

        - Island Model - The population is divided in subpopulation that can run in heterogeneous machines (this is the most common in distributed computing)

        
- Master-Salve Model - One central pop that communicates and collects data from others

        
          
Distributed computing on browsers

        
        
First implementation was a Master-Slave proposed by Merelo using AJAX

        
Jenkin proposed a parasitic system that was more efficient using JSON instead of XML and using a timer based programming, limiting the CPU load (n-queens problem), however this parasitic computing was described by barabasi

        
The solution in this paper can be also consider parasitic computing

        
This paper does not present a P2P solution, instead something like Crowdprocess does

        

      },
author = {Duda, Jerzy and Dłubacz, W},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Duda, Dłubacz - 2013 - Distributed evolutionary computing system based on web browsers with javascript.pdf:pdf},
journal = {Applied Parallel and Scientific Computing},
keywords = {algorithm,browser-based computation,distributed computing,evolutionary,flowshop scheduling,javascript},
title = {{Distributed evolutionary computing system based on web browsers with javascript}},
url = {http://link.springer.com/chapter/10.1007/978-3-642-36803-5\_13},
year = {2013}
}
@article{Larson2002,
author = {Larson, SM and Snow, CD and Shirts, Michael},
file = {:Users/david/Library/Application Support/Mendeley Desktop/Downloaded/Larson, Snow, Shirts - 2002 - Folding@ Home and Genome@ Home Using distributed computing to tackle previously intractable problems in co.pdf:pdf},
title = {{Folding@ Home and Genome@ Home: Using distributed computing to tackle previously intractable problems in computational biology}},
url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.15.1200},
year = {2002}
}
@misc{Google,
abstract = {WebRTC is a free, open project that enables web browsers with Real-Time Communications (RTC) capabilities via simple JavaScript APIs. The WebRTC components have been optimized to best serve this purpose. Our mission: To enable rich, high quality, RTC applications to be developed in the browser via simple JavaScript APIs and HTML5.},
author = {Google/Mozzila/Opera},
title = {webrtc.org},
url = {http://webrtc.org},
urldate = {10 December 2013}
}
